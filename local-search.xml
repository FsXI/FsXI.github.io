<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title> 嘻嘻和万万-02</title>
    <link href="/2020/10/15/%E5%98%BB%E5%98%BB%E5%92%8C%E4%B8%87%E4%B8%87-02/"/>
    <url>/2020/10/15/%E5%98%BB%E5%98%BB%E5%92%8C%E4%B8%87%E4%B8%87-02/</url>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1450574147&auto=1&height=66"></iframe><pre><code class="hljs java">当毕设选题出来  当毕业提上了日程  当然这都是后话  当十月三那天的到来  前一天晚上紧张的睡不着觉  当脑海里放映过和你相见的画面  我们的第一句话是什么  第一次身体接触会是什么情况  在飞机紧张的手心出汗  刚下机场冷得索索发抖  呆瓜没来接我是正确的  看不到我狼狈的一面  然后我深吸一口气  噢~这就是北京  一个人  第一次  来到一个陌生的城市  只为见  心心念念想见的人  朝思暮想  异地真的挺难的  但异地后的相见  才显得相遇更加可贵  才会把相处的时间  去更加珍惜  当我第一眼看到你  红色卫衣黑色长裤  和我想的一模一样  我慌张了  你的话不怎么多  脑袋里都在着急的想话题  而且不显得那么刻意  我会不会是你之前想的那样  我与网络上的我  会不会有什么偏差呢  很想牵你的手  但是会觉得很冒昧  很想摸摸你的头  可是会让你觉得我是个变态  很想亲吻你  很想拥抱你很荣幸  这些都一一实现了  和你相处的感觉是怎样的  就很开心  很自在  很想把时间停留  很想把全世界一切的美好  都给予你  喜欢你的笑  喜欢你的一切一切  或许这次真的  遇到能让我  深爱一辈子的女人  而我一定会  好好珍惜  这份相遇  我的万小姐  我的女人  My love.</code></pre><p><img src="https://img-blog.csdnimg.cn/2020101516341374.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20201015163418587.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20201015163423224.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2020101516342854.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2020101516343263.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>嘻嘻和万万-01</title>
    <link href="/2020/08/11/%E5%98%BB%E5%98%BB%E5%92%8C%E4%B8%87%E4%B8%87-01/"/>
    <url>/2020/08/11/%E5%98%BB%E5%98%BB%E5%92%8C%E4%B8%87%E4%B8%87-01/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs java">相识于<span class="hljs-number">7.25</span>号经过我在微博不断地打扰她她也慢慢的注意到我和我有一句没一句的聊了起来然后我就把她成树洞好的坏的就和她说之后她也慢慢打开心扉也开始分享她的心事于是我们就成了无话不说的网友随着时间的流逝我们发现我们真的很像哎爱好 经历 性格我懂的她也懂无需过多解释就如同她说的我们都处在深海里但所幸的是我和她在同一个频道里惺惺相惜之后就白嫖到她的微信就更加没日没夜的聊起来双方也越来越熟悉了解对方我的置顶也是她她的置顶也是我虽然偶尔会吵架闹脾气但很快就会和好解决越来越觉得在这乏味的生活里能够遇见她是多么的幸运即便相距<span class="hljs-number">1680.91</span>公里即便是暂时的异地但这次我也好像拥有前所未有的勇气和决心异地恋过了就是一辈子了我相信我们可以熬过去的你说 对吧我的万万❤</code></pre><p><img src="https://img-blog.csdnimg.cn/20200811180035373.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200811180034837.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200811180034561.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020081118003374.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200811180035844.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>（自定义组件修改源码）Vant weapp踩坑之修改Card 商品卡片源码</title>
    <link href="/2020/04/20/%EF%BC%88%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E4%BF%AE%E6%94%B9%E6%BA%90%E7%A0%81%EF%BC%89Vant-weapp%E8%B8%A9%E5%9D%91%E4%B9%8B%E4%BF%AE%E6%94%B9Card-%E5%95%86%E5%93%81%E5%8D%A1%E7%89%87%E6%BA%90%E7%A0%81/"/>
    <url>/2020/04/20/%EF%BC%88%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E4%BF%AE%E6%94%B9%E6%BA%90%E7%A0%81%EF%BC%89Vant-weapp%E8%B8%A9%E5%9D%91%E4%B9%8B%E4%BF%AE%E6%94%B9Card-%E5%95%86%E5%93%81%E5%8D%A1%E7%89%87%E6%BA%90%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>首先先给上官网<a href="https://youzan.github.io/vant-weapp/#/card" target="_blank" rel="noopener">https://youzan.github.io/vant-weapp/#/card</a></p><p>按照官网给出的代码复制粘贴一下</p><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/20200401201439595.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>可往往我们的需求和这个模块或多或少都有点出入。</strong></p><p>例如最近我的项目的原型需求是这样的：<br><img src="https://img-blog.csdnimg.cn/20200401201600730.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>有点像，可又有点不像，哈哈哈，那我们一起看看源码把官网的例子改为自己想要的样子。</p><ul><li><strong>首先是wxml文件那里，有定义好的title和price等等，我们照他们的写法，添加自己的想要的东西，例如我就在原来的基础上添加了grade和slaes，代码如下：</strong></li></ul><p><img src="https://img-blog.csdnimg.cn/20200401201913127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>- 这是第一步，第二步根据自己的需求添加wxss的样式，基本上都是复制粘贴然后修改，我主要是修改字体的颜色，代码也贴上吧。</strong></p><p><img src="https://img-blog.csdnimg.cn/20200401202053824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><ul><li>最后一步，打开js文件，按着官方所定义的格式，把刚刚自己定义的变量添加上去，包括class和prop。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200401202230934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>其实如果有兴趣的话也可以研究一下vant-weapp的源码是怎样写的，还是他们是怎么让我们直接引用的，在此就不一一阐述了，最后附上更改后card的样子：<br><img src="https://img-blog.csdnimg.cn/20200401202550908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>大概也完成需求了，大家可以参考一下，毕竟官方给出来的只是参考，我们加以利用罢了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>（自定义组件修改源码）Vant weapp踩坑之滑动单元格SwipeCell样式问题</title>
    <link href="/2020/04/20/%EF%BC%88%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E4%BF%AE%E6%94%B9%E6%BA%90%E7%A0%81%EF%BC%89Vant-weapp%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%BB%91%E5%8A%A8%E5%8D%95%E5%85%83%E6%A0%BCSwipeCell%E6%A0%B7%E5%BC%8F%E9%97%AE%E9%A2%98/"/>
    <url>/2020/04/20/%EF%BC%88%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E4%BF%AE%E6%94%B9%E6%BA%90%E7%A0%81%EF%BC%89Vant-weapp%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%BB%91%E5%8A%A8%E5%8D%95%E5%85%83%E6%A0%BCSwipeCell%E6%A0%B7%E5%BC%8F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>首先先附上官网：<a href="https://youzan.github.io/vant-weapp/#/swipe-cell" target="_blank" rel="noopener">https://youzan.github.io/vant-weapp/#/swipe-cell</a></p><p>可按照官网照做删除的按钮根本没有样式，相信大家也在网上找到了方法解决了，就是直接找到源码的wxss文件直接加</p><pre><code class="hljs css"><span class="hljs-selector-class">.van-swipe-cell__left</span>&#123;<span class="hljs-attribute">display</span>: inline-block;<span class="hljs-attribute">width</span>: <span class="hljs-number">65px</span>;<span class="hljs-attribute">height</span>: <span class="hljs-number">44px</span>;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<span class="hljs-attribute">line-height</span>: <span class="hljs-number">44px</span>;<span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<span class="hljs-attribute">text-align</span>: center;<span class="hljs-attribute">background-color</span>:<span class="hljs-built_in">rgb</span>(<span class="hljs-number">84</span>, <span class="hljs-number">221</span>, <span class="hljs-number">84</span>);&#125;<span class="hljs-selector-class">.van-swipe-cell__right</span> &#123;<span class="hljs-attribute">display</span>: inline-block;<span class="hljs-attribute">width</span>: <span class="hljs-number">65px</span>;<span class="hljs-attribute">height</span>: <span class="hljs-number">44px</span>;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<span class="hljs-attribute">line-height</span>: <span class="hljs-number">44px</span>;<span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<span class="hljs-attribute">text-align</span>: center;<span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f44</span>;&#125;</code></pre><p>问题还没结束，如果你是在自定义组件那里使用swipeCell的话，就用我自己的案列来讲：<br><img src="https://img-blog.csdnimg.cn/20200325212101154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>这按钮就很不听的话在最上面了，所以我们就修改一下官方的源码，修改top就是组件的上边距：<br><img src="https://img-blog.csdnimg.cn/2020032521224612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>好了这次就很听话了<br><img src="https://img-blog.csdnimg.cn/20200325212323391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>完成需求了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Spring Boot项目实训-邮差系统的实现（完整项目）</title>
    <link href="/2020/04/20/Spring-Boot%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD-%E9%82%AE%E5%B7%AE%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%88%E5%AE%8C%E6%95%B4%E9%A1%B9%E7%9B%AE%EF%BC%89/"/>
    <url>/2020/04/20/Spring-Boot%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD-%E9%82%AE%E5%B7%AE%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%88%E5%AE%8C%E6%95%B4%E9%A1%B9%E7%9B%AE%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="1、项目简介"><a href="#1、项目简介" class="headerlink" title="1、项目简介"></a>1、项目简介</h1><p>本项目主要分为3个模块：<br>（1）邮客模块<br>（2）邮差模块<br>（3）管理员模块</p><h1 id="2、数据库模型如下："><a href="#2、数据库模型如下：" class="headerlink" title="2、数据库模型如下："></a>2、数据库模型如下：</h1><p><img src="https://img-blog.csdnimg.cn/20191212184034285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="3、项目结构如下："><a href="#3、项目结构如下：" class="headerlink" title="3、项目结构如下："></a>3、项目结构如下：</h1><p><img src="https://img-blog.csdnimg.cn/20191212184059484.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="4、功能模块细则："><a href="#4、功能模块细则：" class="headerlink" title="4、功能模块细则："></a>4、功能模块细则：</h1><p>（1）邮客模块<br>1、邮客注册、登录<br><img src="https://img-blog.csdnimg.cn/20191212184140568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>关键代码：<br><img src="https://img-blog.csdnimg.cn/20191212184143578.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>注册模块：<br><img src="https://img-blog.csdnimg.cn/20191212184154833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>2、邮客登录以后可以查看自己的权限以及快递信息<br>当每个邮客注册登录后，他的权限都为新用户：<br><img src="https://img-blog.csdnimg.cn/20191212184157799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>代码：<br><img src="https://img-blog.csdnimg.cn/20191212184211482.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>当邮客想要寄件时，必须完善自己的信息：<br><img src="https://img-blog.csdnimg.cn/20191212184219455.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191212184224381.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>代码：</p><pre><code class="hljs java"><span class="hljs-meta">@ResponseBody</span><span class="hljs-function">String <span class="hljs-title">resuleinfo</span><span class="hljs-params">(HttpServletRequest request, String username, String phone, Long woid, String address)</span> </span>&#123;Mailcustomer = (Mailcustomer) request.getSession().getAttribute(<span class="hljs-string">"mailcustomer"</span>);mailcustomer.setManame(username);mailcustomer.setMaadress(address);mailcustomer.setMaworkingarea(workingareaService.findworkingareaById(woid));mailcustomer.setMaphone(phone);<span class="hljs-keyword">if</span> (mailcustomer.getMarole().getRoid() == <span class="hljs-number">1</span>) &#123;mailcustomer.setMarole(roleService.findRoleById((<span class="hljs-keyword">short</span>) <span class="hljs-number">2</span>));&#125;mailcustomerService.savemailcustomer(mailcustomer);request.getSession().setAttribute(<span class="hljs-string">"mailcustomer"</span>, mailcustomer);<span class="hljs-keyword">return</span> <span class="hljs-string">"更改成功！"</span>;&#125;</code></pre><p>完善自己的信息以后，就可以寄件，并可以看到自己的折扣情况<br><img src="https://img-blog.csdnimg.cn/20191212184313359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>点击确定按钮，就能看到自己的寄件情况：<br><img src="https://img-blog.csdnimg.cn/20191212184314807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>（2）邮差模块<br>1、邮差的登录<br><img src="https://img-blog.csdnimg.cn/20191212184325721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>代码：<br><img src="https://img-blog.csdnimg.cn/20191212184332297.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>2、邮差可以查看快件的情况，也可以查看系统给予的任务，用不同颜色显示快件包裹的情况<br>派件：<br><img src="https://img-blog.csdnimg.cn/2019121218434032.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>收件：<br><img src="https://img-blog.csdnimg.cn/20191212184342842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>当邮差点击正在寄件的时候，会弹出显示需要的金额<br><img src="https://img-blog.csdnimg.cn/20191212184351660.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>当邮差输入金额，点击确定以后，会在下方显示邮客需要交付的金额，然后用户也可以看到自己的邮费是多少<br><img src="https://img-blog.csdnimg.cn/20191212184354261.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>邮客查看金额：</p><p><img src="https://img-blog.csdnimg.cn/20191212184405906.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>代码：</p><pre><code class="hljs java"><span class="hljs-meta">@GetMapping</span>(<span class="hljs-string">"/receipt/&#123;page&#125;"</span>)<span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getreceipt</span><span class="hljs-params">(@PathVariable <span class="hljs-keyword">int</span> page,HttpServletRequest request)</span></span>&#123;Post = (Post) request.getSession().getAttribute(<span class="hljs-string">"post"</span>);Sort = <span class="hljs-keyword">new</span> Sort(Sort.Direction.DESC,<span class="hljs-string">"reid"</span>);Pageable = PageRequest.of(page-<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,sort);Page&lt;Recipient&gt; recipients = recipientService.findRecipientToPost(post.getPoid(),pageable);List&lt;Recipient&gt; recipients1 = recipients.getContent();System.out.println(recipients1.toString());List&lt;State&gt; lose = stateService.findLose(<span class="hljs-string">"失败"</span>);<span class="hljs-comment">//        System.out.println(lose.toString());</span>request.setAttribute(<span class="hljs-string">"lose"</span>,lose);isreoverdue(recipients1);request.setAttribute(<span class="hljs-string">"postrecipients"</span>,recipients1);<span class="hljs-keyword">return</span> <span class="hljs-string">"WO/Receipt"</span>;&#125;</code></pre><p>3、当邮差寄件结束以后，点击完成寄件，邮客同时可以知道快件已经寄出了；当邮客发现快件在寄出过程中出现问题，可点击寄件失败按钮，提示邮客快件寄出过程遇到的问题：</p><p><img src="https://img-blog.csdnimg.cn/20191212184427467.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>同时邮客也能知道快件邮寄过程的问题：<br><img src="https://img-blog.csdnimg.cn/20191212184433704.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>代码：</p><p><img src="https://img-blog.csdnimg.cn/20191212184441982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>（3）管理员模块<br>1、管理员登录模块<br><img src="https://img-blog.csdnimg.cn/20191212184449555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>代码：<br><img src="https://img-blog.csdnimg.cn/20191212184449848.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>2、管理员可以查看邮客的信息，并修改邮客的权限<br>注：当邮客没有完善自己的信息时，不能够修改他/她的权限</p><p><img src="https://img-blog.csdnimg.cn/20191212184459787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191212184503938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>修改完以后，这里的每一个邮差的权限不同，所对应的颜色显示也不一样<br><img src="https://img-blog.csdnimg.cn/20191212184521147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>代码：<br><img src="https://img-blog.csdnimg.cn/2019121218452778.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>3、查看邮差情况（详细信息），也可以新增邮差<br><img src="https://img-blog.csdnimg.cn/20191212184532323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191212184537882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>修改邮差信息：<br><img src="https://img-blog.csdnimg.cn/20191212184543898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>注：当邮差在所在区域有工作时，不能修改其工作区域以及工作状态，而当邮差有事请假在休息中，结束以后，管理员可以修改其状态以及工作区域</p><p>由上图看出，小强的工作状态已经修改为工作中</p><p>代码：</p><pre><code class="hljs java"><span class="hljs-keyword">if</span> (workingarea != post.getPoworkarea()) &#123;<span class="hljs-keyword">if</span> (repostid.contains(<span class="hljs-keyword">new</span> Short((<span class="hljs-keyword">short</span>) <span class="hljs-number">1</span>)) || repostid.contains(<span class="hljs-keyword">new</span> Short((<span class="hljs-keyword">short</span>) <span class="hljs-number">2</span>)) ||sepostid.contains(<span class="hljs-keyword">new</span> Short((<span class="hljs-keyword">short</span>) <span class="hljs-number">1</span>)) || sepostid.contains(<span class="hljs-keyword">new</span> Short((<span class="hljs-keyword">short</span>) <span class="hljs-number">2</span>))) &#123;<span class="hljs-keyword">return</span> <span class="hljs-string">"该邮差目前在所处区域有正在进行的工作，不可更改！"</span>;&#125;<span class="hljs-keyword">else</span> &#123;post.setPoworkarea(workingarea);&#125;&#125;postService.update(post);<span class="hljs-keyword">return</span> <span class="hljs-string">"更改成功"</span>;&#125;</code></pre><p>4、通过点击工作状况，可以查询某个邮差的工作情况：</p><p><img src="https://img-blog.csdnimg.cn/20191212184613495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191212184619510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>5、派件表<br><img src="https://img-blog.csdnimg.cn/20191212184624577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>在这里可以看到分配给每个邮差的任务，同时也可以根据邮客提交的快件订单，分配给每个邮差</p><p>查看工作量以及工资:</p><p><img src="https://img-blog.csdnimg.cn/20191212184625804.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong><em>注：分配原则：在同一区域内，每一个快件会默认派给工作量较少的邮差，因为不可能有的邮差工作量很大，而有的邮差工作量很少，甚至没有工作量，所以在这里设置了优先级</em></strong></p><p>代码：<br><img src="https://img-blog.csdnimg.cn/20191212184658429.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>6、收件表<br>管理员可以通过该表查看每个包裹的情况<br><img src="https://img-blog.csdnimg.cn/20191212184706204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>本个项目对springboot初学者是一个很好的学习项目，如有兴趣，欢迎star~</p><p>源码地址：<a href="https://github.com/FsXI/RSCdemo" target="_blank" rel="noopener">https://github.com/FsXI/RSCdemo</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>入门算法-算法的时间复杂性分析（计算书的页码）</title>
    <link href="/2020/04/20/%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95-%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E6%80%A7%E5%88%86%E6%9E%90%EF%BC%88%E8%AE%A1%E7%AE%97%E4%B9%A6%E7%9A%84%E9%A1%B5%E7%A0%81%EF%BC%89/"/>
    <url>/2020/04/20/%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95-%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E6%80%A7%E5%88%86%E6%9E%90%EF%BC%88%E8%AE%A1%E7%AE%97%E4%B9%A6%E7%9A%84%E9%A1%B5%E7%A0%81%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="1、求下列函数的渐近表达式"><a href="#1、求下列函数的渐近表达式" class="headerlink" title="1、求下列函数的渐近表达式"></a>1、求下列函数的渐近表达式</h2><p>(1)3n+10n=O(n)<br>(2) n/10+2=O(2)<br>(3)21+1/n=O(1)<br>(4)10 log3=O(n)</p><h2 id="2、分析下面算法属于什么功能，并求算法的时间复杂性函数"><a href="#2、分析下面算法属于什么功能，并求算法的时间复杂性函数" class="headerlink" title="2、分析下面算法属于什么功能，并求算法的时间复杂性函数"></a>2、分析下面算法属于什么功能，并求算法的时间复杂性函数</h2><p>  int factorial(int n)<br> {<br>       if (n == 0) return 1;<br>       return n*factorial(n-1);<br>   }</p><h2 id="3、算法实现题，要求写出问题的分析过程，然后上机实现算法"><a href="#3、算法实现题，要求写出问题的分析过程，然后上机实现算法" class="headerlink" title="3、算法实现题，要求写出问题的分析过程，然后上机实现算法"></a>3、算法实现题，要求写出问题的分析过程，然后上机实现算法</h2><p><em>统计数字问题：<br>(1)、问题描述<br>一本书的页码从自然数1 开始顺序编码直到自然数n。书的页码按照通常的习惯编排，每个页码都不含多余的前导数字0。例如，第6 页用数字6 表示，而不是06 或006 等。数字计数问题要求对给定书的总页码n，计算出书的全部页码中分别用到多少次数字0，1， 2，…，9。<br>(2)、算法设计<br>给定表示书的总页码的10 进制整数n (1≤n≤10) 。编程计算书的全部页码中分别用到多少次数字0，1，2，…，9。</em></p><pre><code class="hljs plain">&#x2F;&#x2F;&#x2F;&#x2F;  dome1.cpp&#x2F;&#x2F;  arithmet&#x2F;&#x2F;&#x2F;&#x2F;  Created by ExiFeng on 2019&#x2F;9&#x2F;5.&#x2F;&#x2F;  Copyright © 2019 ExiFeng. All rights reserved.&#x2F;&#x2F;#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;int weishu(int n);int zuigao(int n);int yushu(int n);int f(int n);int s(int n);void CountDight(int page, int num[]);int main()&#123;    int page;    while (1) &#123;        cout&lt;&lt;endl&lt;&lt;&quot;请输入一个页码，以0结束程序：&quot;&lt;&lt;endl;        cin&gt;&gt;page;        if (page&#x3D;&#x3D;0) &#123;            break;        &#125;        int num[10] &#x3D; &#123;0&#125;;        CountDight(page, num);        num[0] &#x3D; num[0] - s(page);        cout&lt;&lt;&quot;数字0~9出现的次数分别是：&quot;&lt;&lt;endl;        for (int i &#x3D; 0; i&lt;10; i++) &#123;            cout&lt;&lt;num[i]&lt;&lt;&#39; &#39;;            cout&lt;&lt;endl;        &#125;        return 0;    &#125;&#125;int weishu(int n)&#123;    int i &#x3D; 0;    while (n) &#123;        n &#x2F;&#x3D; 10;        i++;    &#125;    return i;&#125;int zuigao(int n)&#123;    return n&#x2F;(int)pow(10.0, weishu(n)-1);&#125;int yushu(int n)&#123;    return n%(int)pow(10.0, weishu(0)-1);&#125;int f(int n)&#123;    return n*(int)pow(10.0, n-1);&#125;int s(int n)&#123;    return (1-(int)pow(10.0, weishu(n)))&#x2F;(1-10);&#125;void CountDight(int page, int num[])&#123;    int n &#x3D; weishu(page);    int m &#x3D; zuigao(page);    int m1 &#x3D; yushu(page);        int x &#x3D; f(n-1);    for (int i&#x3D;0; i&lt;10; i++) &#123;        num[i] +&#x3D; x*m;    &#125;    for (int i&#x3D;0; i&lt;m; i++) &#123;        num[i] +&#x3D; (int)pow(10.0, n-1);    &#125;    num[m] +&#x3D; m1+1;    num[0] +&#x3D; (n-weishu(m1)-1)*(m1+1);        if (m1 &#x3D;&#x3D; 0)return;    else CountDight(m1, num);    &#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>入门算法-穷举法（计算完全数和求解幂集问题）</title>
    <link href="/2020/04/20/%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95-%E7%A9%B7%E4%B8%BE%E6%B3%95%EF%BC%88%E8%AE%A1%E7%AE%97%E5%AE%8C%E5%85%A8%E6%95%B0%E5%92%8C%E6%B1%82%E8%A7%A3%E5%B9%82%E9%9B%86%E9%97%AE%E9%A2%98%EF%BC%89/"/>
    <url>/2020/04/20/%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95-%E7%A9%B7%E4%B8%BE%E6%B3%95%EF%BC%88%E8%AE%A1%E7%AE%97%E5%AE%8C%E5%85%A8%E6%95%B0%E5%92%8C%E6%B1%82%E8%A7%A3%E5%B9%82%E9%9B%86%E9%97%AE%E9%A2%98%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>  <em>写在前面，关于穷举法的定义自行去Google，在我的理解就是暴力求解，把所有可能都推算出来，这对于自己没有其他策略和解题思路的情况下，可以使用穷举法，但是其弊端也是很明显的，相对于其他算法思想来说时间复杂度是极高的，所以慎用。</em></p><h2 id="一、使用技术"><a href="#一、使用技术" class="headerlink" title="一、使用技术"></a>一、使用技术</h2><p>蛮力法所赖的基本技术——扫描技术<br>基本的扫描技术——遍历<br>（1）集合的遍历：按集合中元素序号的顺序处理各元素<br>（2）线性表的遍历：以数组形式存储，按下标顺序处理<br>（3）树的遍历：对二叉树，包括前序、中序、后序和层序<br>（4）图的遍历：深度优先、广度优先</p><h2 id="二、适用范围"><a href="#二、适用范围" class="headerlink" title="二、适用范围"></a>二、适用范围</h2><p>（1）理论上，蛮力法可以解决可计算领域的各种问题。<br>   （2）蛮力法经常用来解决一些较小规模的问题。<br>   （3）对于某些问题,蛮力法可以产生一些合理的算法，他们具备一定实用价值，而且不受问题规模的限制。<br>   （4）蛮力法可以作为某类问题时间性能的底限，作为衡量同样问题效率的基础算法。 </p><h2 id="三、求解过程"><a href="#三、求解过程" class="headerlink" title="三、求解过程"></a>三、求解过程</h2><p>根据问题中的条件将可能的情况一一列举出来，逐一尝试从中找出满足问题条件的解。但有时列举的情况数目很大，则需要排除一些明显不合理的情况，以减少问题可能解规模。<br>用蛮力法解决问题，通常从两个方面进行算法设计：<br>1）找出枚举范围：分析问题所涉及的各种情况。<br>2）找出约束条件：分析问题的解需要满足的条件，并用逻辑表达式表示。</p><h2 id="四、基本格式"><a href="#四、基本格式" class="headerlink" title="四、基本格式"></a>四、基本格式</h2><p><img src="https://img-blog.csdnimg.cn/20191004151237832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjYzNDI2MA==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="五、例题"><a href="#五、例题" class="headerlink" title="五、例题"></a>五、例题</h2><p>1、编写一个程序，输出2～1000之间的所有完全数。所谓完全数，是指这样的数，该数的各因子（除该数本身外）之和正好等于该数本身，例如：<br>　　6=1+2+3<br>　　28=1+2+4+7+14<br>解：先考虑对于一个整数m，如何判断它是否为完全数。从数学知识可知：一个数m的除该数本身外的所有因子都在1～m/2之间。算法中要取得因子之和，只要在1～m/2之间找到所有整除m的数，将其累加起来即可。如果累加和与m本身相等，则表示m是一个完全数，可以将m 输出。</p><pre><code class="hljs cpp"><span class="hljs-comment">//  main.cpp</span><span class="hljs-comment">//  dome4</span><span class="hljs-comment">//</span><span class="hljs-comment">//  Created by ExiFeng on 2019/9/26.</span><span class="hljs-comment">//  Copyright © 2019 ExiFeng. All rights reserved.</span><span class="hljs-comment">//</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;方法<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">int</span> i,j,n;    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"2-1000内的所有完数有："</span>;    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">2</span>; i&lt;=<span class="hljs-number">1000</span>; i++)    &#123;        n=<span class="hljs-number">1</span>;        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">2</span>; j&lt;<span class="hljs-built_in">sqrt</span>(i); j++)            <span class="hljs-keyword">if</span>(i%j==<span class="hljs-number">0</span>)                n+=(j+i/j);        <span class="hljs-keyword">if</span>(i==n)            <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" "</span>;    &#125;    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-built_in">endl</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-comment">//方法2</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-keyword">int</span> i,j,n;    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"2-1000内的所有完数有："</span>;    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">2</span>; i&lt;=<span class="hljs-number">1000</span>; i++)    &#123;        n=<span class="hljs-number">1</span>;        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">2</span>; j&lt;=i/<span class="hljs-number">2</span>; j++)            <span class="hljs-keyword">if</span>(i%j==<span class="hljs-number">0</span>)                n+=j;        <span class="hljs-keyword">if</span>(i==n)            <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" "</span>;    &#125;    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-built_in">endl</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><p>2、问题描述：对于给定的正整数n（n≥1），求1～n构成的集合的所有子集（幂集）。<br>幂集（Power  Set）：原集合中所有的子集（包括全集和空集）构成的集族<br>n为3时，集合为：{1, 2, 3}<br>所有的子集为：{}, {1}, {2}, {3}, {1,2}, {1,3}, {2,3}, {1,2,3}<br>总次数=2的n次方</p><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">first</span><span class="hljs-params">(<span class="hljs-keyword">int</span> b[],<span class="hljs-keyword">int</span> n)</span></span>;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-keyword">int</span> n = <span class="hljs-number">3</span>;    <span class="hljs-keyword">int</span> a[<span class="hljs-number">3</span>] = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;;    <span class="hljs-keyword">int</span> b[<span class="hljs-number">3</span>] = &#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;    <span class="hljs-keyword">int</span> i, k;    <span class="hljs-keyword">int</span> pw = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, n);    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"1—"</span> &lt;&lt; n &lt;&lt; <span class="hljs-string">"的幂集"</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; pw; i++) &#123;              <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"&#123;"</span>;        <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; n; k++)            <span class="hljs-keyword">if</span> (b[k])                <span class="hljs-built_in">cout</span> &lt;&lt; a[k];        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"&#125;"</span>;        first(b, n);    &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">first</span><span class="hljs-params">(<span class="hljs-keyword">int</span> b[],<span class="hljs-keyword">int</span> n)</span></span>&#123;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;        <span class="hljs-keyword">if</span>(b[i])            b[i] = <span class="hljs-number">0</span>;        <span class="hljs-keyword">else</span>&#123;            b[i] = <span class="hljs-number">1</span>;            <span class="hljs-keyword">break</span>;        &#125;    &#125;&#125;</code></pre><p>当然，求解幂问题还可以使用回溯法和动态规划法，在这里我仅此列举穷举法，有兴趣的同学们可以自行google。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot集成Mybatis2（附带整合Junit和lombok）</title>
    <link href="/2020/04/20/SpringBoot%E9%9B%86%E6%88%90Mybatis2%EF%BC%88%E9%99%84%E5%B8%A6%E6%95%B4%E5%90%88Junit%E5%92%8Clombok%EF%BC%89/"/>
    <url>/2020/04/20/SpringBoot%E9%9B%86%E6%88%90Mybatis2%EF%BC%88%E9%99%84%E5%B8%A6%E6%95%B4%E5%90%88Junit%E5%92%8Clombok%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>掘金地址：<a href="https://juejin.im/post/5d37faf16fb9a07f03577c97" target="_blank" rel="noopener">https://juejin.im/post/5d37faf16fb9a07f03577c97</a></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>自己现在也是在初学springboot，在之前开发时用过ssm架构，觉得步骤有点繁琐，进而了解到springboot。</p><p>SpringBoot对上述Spring的缺点进行的改善和优化，基于约定优于配置的思想，可以让开发人员不必在配置与逻辑业务之间进行思维的切换，全身心的投入到逻辑业务的代码编写中，从而大大提高了开发的效率，一定程度上缩短了项目周期。</p><h3 id="springboot的特点："><a href="#springboot的特点：" class="headerlink" title="springboot的特点："></a>springboot的特点：</h3><ul><li><p>起步依赖</p><p>起步依赖本质上是一个Maven项目对象模型（Project Object Model，POM），定义了对其他库的传递依赖，这些东西加在一起即支持某项功能。</p><p>简单的说，起步依赖就是将具备某种功能的坐标打包到一起，并提供一些默认的功能。</p></li><li><p>自动配置</p><p>Spring Boot的自动配置是一个运行时（更准确地说，是应用程序启动时）的过程，考虑了众多因素，才决定Spring配置应该用哪个，不该用哪个。该过程是Spring自动完成的。</p></li></ul><h2 id="第一步：新建一个springboot-maven工程"><a href="#第一步：新建一个springboot-maven工程" class="headerlink" title="第一步：新建一个springboot maven工程"></a>第一步：新建一个springboot maven工程</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI0LzE2YzIyYjA5OGQ5ZmQzYTM" srcset="/img/loading.gif" alt=""></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI0LzE2YzIyYjE1YWI5ZjM0YTc" srcset="/img/loading.gif" alt=""><br>勾选一下 web starter</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI0LzE2YzIyYjFjMjIwMDQzZTE" srcset="/img/loading.gif" alt=""></p><h2 id="第二步：添加Mybatis依赖和数据库驱动信息"><a href="#第二步：添加Mybatis依赖和数据库驱动信息" class="headerlink" title="第二步：添加Mybatis依赖和数据库驱动信息"></a>第二步：添加Mybatis依赖和数据库驱动信息</h2><pre><code class="hljs plain">&lt;!--mybatis起步依赖--&gt;       &lt;dependency&gt;           &lt;groupId&gt;org.mybatis.spring.boot&lt;&#x2F;groupId&gt;           &lt;artifactId&gt;mybatis-spring-boot-starter&lt;&#x2F;artifactId&gt;           &lt;version&gt;1.1.1&lt;&#x2F;version&gt;       &lt;&#x2F;dependency&gt;       &lt;!-- MySQL连接驱动 --&gt;       &lt;dependency&gt;           &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;           &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;       &lt;&#x2F;dependency&gt;</code></pre><h2 id="第三步：在application-properties中添加数据量的连接信息和创建简单的user表"><a href="#第三步：在application-properties中添加数据量的连接信息和创建简单的user表" class="headerlink" title="第三步：在application.properties中添加数据量的连接信息和创建简单的user表"></a>第三步：在application.properties中添加数据量的连接信息和创建简单的user表</h2><pre><code class="hljs plain">#DB Configuration:spring.datasource.driverClassName&#x3D;com.mysql.jdbc.Driver spring.datasource.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test? useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf8 spring.datasource.username&#x3D;root spring.datasource.password&#x3D;root</code></pre><pre><code class="hljs plain">-- ---------------------------- -- Table structure for &#96;user&#96; -- ---------------------------- DROP TABLE IF EXISTS &#96;user&#96;; CREATE TABLE &#96;user&#96; (&#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,&#96;username&#96; varchar(50) DEFAULT NULL, &#96;password&#96; varchar(50) DEFAULT NULL, &#96;name&#96; varchar(50) DEFAULT NULL, PRIMARY KEY (&#96;id&#96;)) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;10 DEFAULT CHARSET&#x3D;utf8;-- ------------------------------ Records of user-- ----------------------------INSERT INTO &#96;user&#96; VALUES (&#39;1&#39;, &#39;zhangsan&#39;, &#39;123&#39;, &#39;张三&#39;); INSERT INTO &#96;user&#96; VALUES (&#39;2&#39;, &#39;lisi&#39;, &#39;123&#39;, &#39;李四&#39;);</code></pre><h2 id="第四步：创建实体Bean（在这里推荐使用lombok插件，减少代码量）"><a href="#第四步：创建实体Bean（在这里推荐使用lombok插件，减少代码量）" class="headerlink" title="第四步：创建实体Bean（在这里推荐使用lombok插件，减少代码量）"></a>第四步：创建实体Bean（在这里推荐使用lombok插件，减少代码量）</h2><p>lombok的学习看我上一篇文章：<a href="https://blog.csdn.net/weixin_42634260/article/details/97021227" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42634260/article/details/97021227</a></p><pre><code class="hljs plain">&lt;!--lombok--&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;            &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;            &lt;version&gt;1.16.6&lt;&#x2F;version&gt;        &lt;&#x2F;dependency&gt;</code></pre><pre><code class="hljs plain">@Datapublic class user &#123;    private Integer id;    private String username;    private String password;    private String name;&#125;</code></pre><h2 id="第五步：编写Mapper"><a href="#第五步：编写Mapper" class="headerlink" title="第五步：编写Mapper"></a>第五步：编写Mapper</h2><pre><code class="hljs plain">@Mapperpublic interface UserMapper &#123;    public List&lt;User&gt; queryUserList();&#125;</code></pre><p>注意:@Mapper标记该类是一个mybatis的mapper接口，可以被spring boot自动扫描到spring上下文中</p><h2 id="第六步：配置Mapper映射文件"><a href="#第六步：配置Mapper映射文件" class="headerlink" title="第六步：配置Mapper映射文件"></a>第六步：配置Mapper映射文件</h2><p>在src\main\resources\mapper路径下加入UserMapper.xml配置文件</p><pre><code class="hljs plain">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot; ?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot; &gt;&lt;mapper namespace&#x3D;&quot;com.itheima.mapper.UserMapper&quot;&gt;&lt;select id&#x3D;&quot;queryUserList&quot; resultType&#x3D;&quot;user&quot;&gt; select * from user&lt;&#x2F;select&gt; &lt;&#x2F;mapper&gt;</code></pre><h2 id="第七步：在application-properties中添加mybatis的信息"><a href="#第七步：在application-properties中添加mybatis的信息" class="headerlink" title="第七步：在application.properties中添加mybatis的信息"></a>第七步：在application.properties中添加mybatis的信息</h2><pre><code class="hljs plain">#spring集成Mybatis环境#pojo别名扫描包 mybatis.type-aliases-package&#x3D;com.itheima.domain #加载Mybatis映射文件 mybatis.mapper-locations&#x3D;classpath:mapper&#x2F;*Mapper.xml</code></pre><h2 id="第八步：编写controller测试类"><a href="#第八步：编写controller测试类" class="headerlink" title="第八步：编写controller测试类"></a>第八步：编写controller测试类</h2><pre><code class="hljs plain">@Controllerpublic class MapperController &#123;    @Autowired    private UserMapper userMapper;    @RequestMapping(&quot;&#x2F;queryUser&quot;)    @ResponseBody    public List&lt;User&gt; queryUser()&#123;        List&lt;User&gt; users &#x3D; userMapper.queryUserList();        return users;    &#125;&#125;</code></pre><h3 id="最后一步：测试，运行代码（注意idea在创建项目时它本身已经帮我们创建了一个SpringBoot引导类）"><a href="#最后一步：测试，运行代码（注意idea在创建项目时它本身已经帮我们创建了一个SpringBoot引导类）" class="headerlink" title="最后一步：测试，运行代码（注意idea在创建项目时它本身已经帮我们创建了一个SpringBoot引导类）"></a>最后一步：测试，运行代码（注意idea在创建项目时它本身已经帮我们创建了一个SpringBoot引导类）</h3><pre><code class="hljs plain">@SpringBootApplicationpublic class SpringbootMybatisApplication &#123;    public static void main(String[] args) &#123;        SpringApplication.run(SpringbootMybatisApplication.class, args);    &#125;&#125;</code></pre><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI0LzE2YzIyYmRiODljMWNjMTc" srcset="/img/loading.gif" alt=""></p><h2 id="随便唠叨一下，springboot继承Junit也是非常简单的"><a href="#随便唠叨一下，springboot继承Junit也是非常简单的" class="headerlink" title="随便唠叨一下，springboot继承Junit也是非常简单的"></a>随便唠叨一下，springboot继承Junit也是非常简单的</h2><h3 id="首先还是添加一下Junit的依赖"><a href="#首先还是添加一下Junit的依赖" class="headerlink" title="首先还是添加一下Junit的依赖"></a>首先还是添加一下Junit的依赖</h3><pre><code class="hljs plain">&lt;!--测试的起步依赖--&gt; &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;&lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;&lt;scope&gt;test&lt;&#x2F;scope&gt;&lt;&#x2F;dependency&gt;</code></pre><h3 id="编写测试类，目录结构如下"><a href="#编写测试类，目录结构如下" class="headerlink" title="编写测试类，目录结构如下"></a>编写测试类，目录结构如下</h3><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI0LzE2YzIyYzBkYzNjZTU0YTA" srcset="/img/loading.gif" alt=""></p><pre><code class="hljs plain">@RunWith(SpringRunner.class)@SpringBootTest(classes &#x3D; SpringbootMybatisApplication.class)public class MybatisTest &#123;    @Autowired    private UserMapper userMapper;    @Test    public void test()&#123;        List&lt;User&gt; users &#x3D; userMapper.queryUserList();        System.out.println(users);    &#125;&#125;</code></pre><p>其中， SpringRunner继承自SpringJUnit4ClassRunner，使用哪一个Spring提供的测试测试引擎都可以</p><pre><code class="hljs plain">public final class SpringRunner extends SpringJUnit4ClassRunner</code></pre><p>@SpringBootTest的属性指定的是引导类的字节码对象。</p><h2 id="run一下，在控制台打印信息"><a href="#run一下，在控制台打印信息" class="headerlink" title="run一下，在控制台打印信息"></a>run一下，在控制台打印信息</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI0LzE2YzIyYzM3M2E4ZmM0ODQ" srcset="/img/loading.gif" alt=""></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>在学习springboot的过程中，要有一种深挖源码的习惯，springboot在开发中给予了我们极大的便利，但是自己要能清晰的明白每个步骤底层的原理是怎样实现的。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="/2020/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/2020/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>好了，我又要重新折腾你了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
